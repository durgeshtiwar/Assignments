1.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1;
    forward_list<int>l2;
    forward_list<int>l3;
    l1.assign({1,85,7,56,9,894,8,44,85});
    l2.assign(5,100);
    l3.assign(l1.begin(),l1.end());
    display(l1);
    display(l2);
    display(l3);
return 0;
}
2.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={4,5,6,8,2,6,52,9};
    display(l1);
    return 0;
}
3.
#include<bits/stdc++.h>
using namespace std;
 
int main()
{
    forward_list<int>l1={1};
    for(int i=10;i>1;i--)
    {
        l1.insert_after(l1.begin(),i);
    }
    int sum = 0;
    for (int i : l1)
    {
        sum=sum+i;
    }
    cout<<"Sum of list : "<<sum;
return 0;
}
4.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={4,8,5,9,6,3,7};
    l1.reverse();
    display(l1);
    return 0;
}
5.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={4,8,8,5,9,9,6,3,3,7};
    l1.unique();
    display(l1);
    return 0;
}
6.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={1,3,7,12,45,78};
    forward_list<int>l2={4,5,6,9,8,2};
    l1.merge(l2);
    display(l1);
    return 0;
}
7.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={3,2,9};
    forward_list<int>l2={8,1,2};
    l1.sort();
    l2.sort();
    l1.merge(l2);
    display(l1);
    return 0;
}
8.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(int i:l)
    {
        cout<<i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={3,2,9};
    forward_list<int>l2={8,1,2};
    l1.swap(l2);
    display(l1);
    display(l2);
    return 0;
}
9.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(auto i=l.begin();i!=l.end();i++)
    {
        cout<<*i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={3,2,9,5,8,7,1};
    forward_list<int>l2={10,20};
    l1.splice_after(l2.begin(),l1,l1.begin(),l1.end());
    display(l2);
    return 0;
}
10.
#include<bits/stdc++.h>
using namespace std;
void display(forward_list<int>l)
{
    for(auto i=l.begin();i!=l.end();i++)
    {
        cout<<*i<<" ";
    }
    cout<<endl;
}
int main()
{
    forward_list<int>l1={3,2,9,5,8,7,1};
    forward_list<int>l2;
    l2.assign(l1.begin(),l1.end());
    display(l2);
    return 0;
}