1.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    deque<int>d;
    d.push_back(3);
    deque<int>::iterator it;
    it=d.begin();
    cout<<*it;
    return 0;
} 
2.
#include<bits/stdc++.h>
using namespace std;
int f1(deque<int>d)
{
    deque<int>::iterator it;
    it = d.end()-1;
    return *it;
}
int main()
{
    deque<int>d;
    d.push_back(3);
    d.push_back(5);
    d.push_back(6);
    d.push_back(8);
    d.push_back(7);
    d.push_back(9);
    cout<<"Last element of deque : "<<f1(d);
    return 0;
} 
3.
#include<bits/stdc++.h>
using namespace std;
int f1(deque<int>d)
{
    deque<int>::iterator it;
    it = d.begin();
    return *it;
}
int main()
{
    deque<int>d;
    d.push_back(3);
    d.push_back(5);
    d.push_back(6);
    d.push_back(8);
    d.push_back(7);
    d.push_back(9);
    cout<<"first element of deque : "<<f1(d);
    return 0;
} 
4.
#include<bits/stdc++.h>
using namespace std;
void f1(deque<int>d)
{
    deque<int>::iterator it;
    for(it=d.begin();it!=d.end();it++)
    {
        cout<<*it<<" ";
    }
}
int main()
{
    deque<int>d;
    d.push_back(3);
    d.push_back(5);
    d.push_back(6);
    d.push_back(8);
    d.push_back(7);
    d.push_back(9);
    f1(d);
    return 0;
}
5.
#include<bits/stdc++.h>
using namespace std;
int f1(deque<int>d)
{
    return d.max_size();
}
int main()
{
    deque<int>d;
    d.push_back(3);
    d.push_back(5);
    d.push_back(6);
    d.push_back(8);
    d.push_back(7);
    d.push_back(9);
    cout<<"Maximum no. of elements that a deque cantainer can hold. : "<<f1(d);
    return 0;
}
6.
#include<bits/stdc++.h>
using namespace std;
void display(deque<int>d,deque<int>d1)
{
    for (int i : d)
    {
        cout<<i<<" ";
    }
    cout<<endl;
    for (int i : d1)
    {
        cout<<i<<" ";
    }
    
}
int main()
{
    deque<int>d={1,5,7,8,9,6,4,3,14};
    deque<int>d1;
    d1.assign(d.begin(),d.end());
    display(d,d1);
    return 0;
}
7.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    deque<int>d={1,5,7,8,9,6,4,3,14};
    cout<<"First element of deque is : "<<d.front()<<endl;
    cout<<"Last element of deque is : "<<d.back()<<endl;
    return 0;
}
8.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    deque<int>d={1,5,7,8,9,6,4,3,14};
    int n;
    cout<<"Enter the position : ";
    cin>>n;
    d.erase(d.begin()+n);
    for (auto i=d.begin();i!=d.end();i++)
    {
        cout<<*i<<" ";
    }
    return 0;
}
10.
#include<bits/stdc++.h>
using namespace std;
int setTheString(string S,string S1)
{
    int n=S.size();
    int m=S1.size();
    if(n==m)
    {
        if(S==S1)
            return true;
        return false;

    }
deque<string>x,y;
S.push_back(' ');
S1.push_back(' ');
string temp = "";
for (int i = 0; i < n+1; i++)
{
    if(S[i]!=' ')
        temp=temp+S[i];
    else
    {
        x.push_back(temp);
        temp="";
    }
}
for (int i = 0; i < m+1; i++)
{
    if(S1[i]!=' ')
        temp=temp+S1[i];
    else
    {
        y.push_back(temp);
        temp="";
    }
}
while ((x.size()>0&&y.size()&&x.front()==y.front()))
{
    x.pop_front();
    y.pop_front();
}
while ((x.size()>0&&y.size()&&x.back()==y.back()))
{
    x.pop_back();
    y.pop_back();
}
if(x.size()==0||y.size()==0)
    return true;
return false;
}
int main()
{
    string S = "Hello my name is Durgesh tiwari";
    string S1= "Hello Durgesh tiwari";
    cout<<setTheString(S,S1);
    return 0;
} 
11.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    deque<int>d={1,5,7,8,9,6,4,3,14};
    cout<<"First element of deque is : "<<d.front()<<endl;
    cout<<"Last element of deque is : "<<d.back()<<endl;
    return 0;
}
12.
#include<bits/stdc++.h>
using namespace std;
void setTheString(string S)
{
    deque<char>d;
    for (int i = 0; i < S.length(); i++)
    {
        if(S[i]!='#')
        {
            int temp = S[i];
            d.push_back(temp);
        }
        else if(!d.empty())
        {
            d.pop_back();
        }
    }
    string ans="";
    while ((!d.empty()))
    {
        ans=ans+d.front();
        d.pop_front();
    }
    cout<<ans;
}
int main()
{
    string S = "abc#de#f#ghi#Jklmn#op#";
    setTheString(S);
    return 0;
}

