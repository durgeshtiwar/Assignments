1.
#include<iostream>
#include<array>
#include<tuple>
using namespace std;
int main()
{
    array <int ,5>arr={4,5,6,9,2};
    cout<<get<0>(arr)<<" ";
    cout<<get<1>(arr)<<" ";
    cout<<get<2>(arr)<<" ";
    cout<<get<3>(arr)<<" ";
    cout<<get<4>(arr)<<" ";
    return 0;

}
2.
#include<iostream>
#include<array>
#include<tuple>
using namespace std;
int main()
{
    array <int ,5>arr={4,5,6,9,2};
    cout<<arr.size();
    return 0;

}
3.
#include<iostream>
#include<array>
#include<tuple>
using namespace std;
int main()
{
    array <int ,5>arr={4,5,6,9,2};
    cout<<"First element : "<<arr.front()<<endl;
    cout<<"Last element : "<<arr.back()<<endl;
    return 0;

}
4.
#include<iostream>
#include<array>
#include<tuple>
using namespace std;
int main()
{
    array <int ,5>arr={4,5,6,9,2};
    cout<<arr.at(3);
    return 0;
}
5.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    array<int ,5>arr={1,5,7,3,9};
    for(auto i = arr.rend()-1; i!=arr.rbegin()-1;i--)
    cout<<*i<<" ";
    return 0;
}
6.
#include<iostream>
#include<array>
#include<tuple>
using namespace std;
int main()
{
    array <int ,5>arr={4,5,6,9,2};
    if(arr.empty())
    cout<<"Array is empty ";
    else
    cout<<"Array is not empty";

}
7.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int arr[]={1,5,7,8,9,6,4};
    int n = sizeof(arr)/sizeof(0);
    sort(arr,arr+n);
    for (int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}
8.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int arr[]={1,5,7,8,9,6,4};
    int n = sizeof(arr)/sizeof(0);
    sort(arr,arr+n,greater<int>());
    for (int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}
9.
#include<bits/stdc++.h>
using namespace std;
int number(int arr[], int n)
{
    int result=0;
    for(int i=0;i<n;i++)
    {
        result=result^arr[i];
    }
    return result;
}
int main()
{
    int arr[]={1,4,1,5,8,6,4,8,5};
    int n = sizeof(arr)/sizeof(0);
    cout<<number(arr,n);
    return 0;
}
