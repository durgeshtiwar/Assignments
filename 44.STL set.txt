1.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   int sum = 0;
   sum = accumulate(s.begin(),s.end(),0);
   cout<<"Sum is : "<<sum;
   return 0;
}
2.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   for (auto i = s.begin(); i != s.end(); i++)
   {
    cout<<*i<<" ";
   }
   return 0;
}
3.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   s.erase(5);
   for (auto i = s.begin(); i != s.end(); i++)
   {
    cout<<*i<<" ";
   }
   return 0;
}
4.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   if(s.empty())
   {
        cout<<"Set is empty then insert elements : ";
        s.insert(5);
        s.insert(6);
        s.insert(9);
        s.insert(7);
        s.insert(3);
   }
   else
   {
    cout<<"Set is not empty"<<endl;
   }
   for (auto i = s.begin(); i != s.end(); i++)
   {
    cout<<*i<<" ";
   }
   return 0;
}
5.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   s.insert(5);
   s.insert(3);
   s.insert(3);
   for (auto i = s.begin(); i != s.end(); i++)
   {
    cout<<*i<<" ";
   }
   return 0;
}
6.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   cout<<*(s.lower_bound(9));
   
   return 0;
}
7.
#include<bits/stdc++.h>
using namespace std;
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   cout<<*(s.upper_bound(7));
   
   return 0;
}
8.
#include<bits/stdc++.h>
using namespace std;
void Search(set<int>s,int si)
{
   if(*(s.find(si))==si)
   cout<<"Search succesfull";
   else
   cout<<"Search unsuccesfull";
}
int main()
{
   set<int>s;
   s.insert(5);
   s.insert(6);
   s.insert(9);
   s.insert(7);
   s.insert(3);
   s.insert(2);
   Search(s,5);
   return 0;
}
9.
#include<bits/stdc++.h>
using namespace std;

int main()
{
   string str = "my name is Durgesh Tiwari";
   set<char>s;
   for (int i = 0; i < str.size(); i++)
   {
      s.insert(str[i]);
   }
   for (auto i : s)
   {
      cout<<i<<" ";
   }
   
   return 0;
}
10.
#include<bits/stdc++.h>
using namespace std;

int main()
{
   array<int,7>arr = {1,2,3,4,5,6,7};
   set<int>s;
   array<int,2>temp;
   s.insert(1);
   s.insert(2);
   s.insert(3);
   s.insert(4);
   s.insert(5);
   s.insert(6);
   s.insert(6);
   for (int j = 0; j < 7; j++)
   {
      if(*(s.find(arr[j]))!=arr[j]) 
      {
         temp[0]=arr[j];
         temp[1]=arr[j-1];
      }
   }
   for(int i=0;i<temp.size();i++)
   {
      cout<<temp[i]<<" ";
   }
   return 0;
}